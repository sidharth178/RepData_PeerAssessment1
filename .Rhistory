tapply(y, newClust2, mean)
plot(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$iter
p
points()
points(x,y,col=kmObj$cluster, pch = 19, cex = 2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex = 2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex = 2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex = 2)
dataMatrix
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd[,1:2]
svd2[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u %*% svd1$d %*% svd1$v
svd1$v
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- sdfsdg
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$subject)
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(x[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust((hclustering, lab.col = unclass(sub1$activity)))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist()
mdist <- dist(sub1[,10:12], maxCon)
mdist
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(1:2)], centers = 6)
kClust
kmeans
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$cluster)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$center[laying,1:12], pch = 19, ylab = "Laying Cluster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
names
print(cnames)
cnames <- strsplit(cnames, split = "|", fixed = TRUE)
print(cnames)
make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$pm25
x0 <- pm0$Sample.Value
str(x0)
is.na(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
datest <- as.Date(as.character(pm1$Date))
dates <- as.Date(as.character(pm1$Date), format = '%Y%m%d')
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), format = '%Y%m%d')
head(dates)
hist(datest[negative], "month")
hist(dates[negative], "month")
str(site0)
intersect(site0, site1)
both <- intersect(site0, site1)
both
head(pm9)
head(pm0)
cnt0 <- subset(pm0, (pm0$State.Code == 36 & pm0$county.site %in% both))
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 36 & Site.Id == 2008)
pm0sub <- subset(cnt0, County.Code == 36 & Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1 , County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), format = '%Y%m%d')
dates1 <- as.Date(as.character(pm1sub$Date), format = '%Y%m%d')
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(h=median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
swirl()
swirl()
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, split = "|", fixed = TRUE)
cnames
wcol
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
pm0
x0 <- pm0$Sample.Value
str(x0)
mean()
mean(is.na(x0))
names(pm1)
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < -
negative <- x1 < 0
negative <- x1 < 0
di,
info()
sum(negative, na.rm = TRUE)
mean(sum(negative, na.rm = TRUE))
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "mont")
hist(dates[negative],"month")
str(site0)
both <- intersect(x0, x1)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36, county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
county.code
pm0sub
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date()
dates0
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
plot
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot
plot(dates0, x0sub, pch = 20)
abline
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot
plot(dates1, x1sub, pch = 20)
abline
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(names(mn0), mean(mn0))
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
plot
with(mrg, points(rep(2, 52), mrg[, 3]))
segments
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
```{r Read Data}
options(warn = -1)      # Suppress warnings
rm(list=ls()) # Clear memory
library(ggplot2, quietly = TRUE)
Data_Raw <- read.csv("activity.csv", sep = ",", header = TRUE)  # Read data file
setwd("~/Data Science Projects/Coursera/RepData_PeerAssessment1")
options(warn = -1)      # Suppress warnings
rm(list=ls()) # Clear memory
library(ggplot2, quietly = TRUE)
Data_Raw <- read.csv("activity.csv", sep = ",", header = TRUE)  # Read data file
options(warn = -1)
rm(list=ls()) # Clear memory
library(ggplot2, quietly = TRUE)
df <- read.csv("activity.csv", sep = ",", header = TRUE)
steps <- aggregate(Data_Raw$steps,by=list(Data_Raw$date),sum)
steps <- aggregate(df$steps,by=list(df$date),sum)
b <- seq(0,25000,by=2500)
hist(steps[,2],xlab="Steps",main="Histogram of Daily Steps",breaks=b,col="green")
steps <- aggregate(df$steps,by=list(df$date),sum)
b <- seq(0,25000,by=2500)
hist(steps[,2],xlab="Steps",main="Histogram of Daily Steps",breaks=b)
View(steps)
View(steps)
steps <- aggregate(df$steps,by=list(df$date),sum)
# b <- seq(0,25000,by=2500)
# hist(steps[,2], xlab="Steps", main="Total number of steps per day", breaks=b)
ggplot(data=steps, aes(steps$x)) +
geom_histogram(breaks=seq(0,25000,by=2500),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency") +
xlim(c(18,52)) +
ylim(c(0,30))
View(df)
steps <- aggregate(df$steps,by=list(df$date),sum)
# b <- seq(0,25000,by=2500)
# hist(steps[,2], xlab="Steps", main="Total number of steps per day", breaks=b)
ggplot(data=df, aes(df$steps)) +
geom_histogram(breaks=seq(0,25000,by=2500),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency") +
xlim(c(18,52)) +
ylim(c(0,30))
steps <- aggregate(df$steps,by=list(df$date),sum)
# b <- seq(0,25000,by=2500)
# hist(steps[,2], xlab="Steps", main="Total number of steps per day", breaks=b)
ggplot(data=steps, aes(steps$x)) +
geom_histogram(breaks=seq(0,25000,by=2500),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency")
# + xlim(c(18,52)) + ylim(c(0,30))
steps <- aggregate(df$steps,by=list(df$date),sum)
# b <- seq(0,25000,by=2500)
# hist(steps[,2], xlab="Steps", main="Total number of steps per day", breaks=b)
ggplot(data=steps, aes(steps$x)) +
geom_histogram(breaks=seq(0,25000,by=2500),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency"))
steps <- aggregate(df$steps,by=list(df$date),sum)
# b <- seq(0,25000,by=2500)
# hist(steps[,2], xlab="Steps", main="Total number of steps per day", breaks=b)
ggplot(data=steps, aes(steps$x)) +
geom_histogram(breaks=seq(0,25000,by=2500),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency")
# + xlim(c(18,52)) + ylim(c(0,30))
steps <- aggregate(df$steps,by=list(df$date),sum)
b <- seq(0,25000,by=2500)
hist(steps[,2], xlab="Steps", main="Total number of steps per day", breaks=b)
# ggplot(data=steps, aes(steps$x)) +
#   geom_histogram(breaks=seq(0,25000,by=2500),
#                  col="red",
#                  fill="green",
#                  alpha = .2) +
#   labs(title="Histogram for Steps Taken per Day") +
#   labs(x="Steps", y="Frequency")
steps <- aggregate(df$steps,by=list(df$date),sum)
ggplot(data=steps, aes(steps$x)) +
geom_histogram(breaks=seq(0,25000,by=2500),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency")
mean(steps$x, na.rm=TRUE)
median(steps$x, na.rm=TRUE)
View(df)
avgact <- aggregate(x=list(steps=df$steps), by=list(interval=df$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=avgact, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
avgact <- aggregate(x=list(steps=df$steps), by=list(interval=df$interval),
FUN=mean, na.rm=TRUE) # create agg df first
ggplot(data=avgact, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
avgact <- aggregate(x=list(steps=df$steps), by=list(interval=df$interval),
FUN=mean, na.rm=TRUE) # create agg df first
ggplot(data=avgact, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute intervals") +
ylab("Average number of steps taken")
averages[which.max(avgact$steps),]
avgact[which.max(avgact$steps),]
steps <- aggregate(df$steps,by=list(df$date),sum)
ggplot(data=steps, aes(steps$x)) +
geom_histogram(breaks=seq(0,25000,by=2500),
col="red",
fill="grey",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency")
steps <- aggregate(df$steps,by=list(df$date),sum)
ggplot(data=steps, aes(steps$x)) +
geom_histogram(breaks=seq(0,25000,by=2500),
col="slategrey",
fill="grey",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency")
avgact <- aggregate(x=list(steps=df$steps), by=list(interval=df$interval),
FUN=mean, na.rm=TRUE) # create agg df first
ggplot(data=avgact, aes(x=interval, y=steps)) +
geom_line(col="blue") +
xlab("5-minute intervals") +
ylab("Average number of steps taken")
avgact <- aggregate(x=list(steps=df$steps), by=list(interval=df$interval),
FUN=mean, na.rm=TRUE) # create agg df first
ggplot(data=avgact, aes(x=interval, y=steps)) +
geom_line(col="slategrey") +
xlab("5-minute intervals") +
ylab("Average number of steps taken")
View(df)
df[is.na(df$steps),]
sum(df[is.na(df$steps),])
sum(is.na(df$steps))
print("The dataset contains " sum(is.na(df$steps)))
sum(is.na(df$steps)))
sum(is.na(df$steps))
View(df)
View(df)
library(dplyr) # forgot to import initially
df %>%
group_by(interval) %>%
mutate_if(is.numeric, function(x) ifelse(is.na(x), mean(x, na.rm = TRUE), steps))
View(df)
library(dplyr) # forgot to import initially
df %>%
group_by(interval) %>%
mutate_if(is.numeric, function(x) ifelse(is.na(steps), mean(steps, na.rm = TRUE), steps))
View(df)
View(df)
str(df)
library(dplyr) # forgot to import initially
df %>%
group_by(interval) %>%
mutate_if(is.numeric, function(x) ifelse(is.na(x), mean(x, na.rm = TRUE), x))
View(df)
library(dplyr) # forgot to import initially
df_clean <- df %>%
group_by(interval) %>%
mutate_if(is.numeric, function(x) ifelse(is.na(x), mean(x, na.rm = TRUE), x))
View(df)
View(df_clean)
steps_clean <- aggregate(df_clean$steps,by=list(df_clean$date),sum)
ggplot(data=steps_clean, aes(steps_clean$x)) +
geom_histogram(breaks=seq(0,25000,by=2500),
col="slategrey",
fill="grey",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency")
View(steps_clean)
View(steps)
View(steps_clean)
mean(steps_clean$x, na.rm=TRUE)
median(steps_clean$x, na.rm=TRUE)
mean(steps_clean$x)
median(steps_clean$x)
mean(steps$x)
median(steps$x
mean(steps$x)
median(steps$x)
View(steps_clean)
steps_clean <- aggregate(df_clean$steps,by=list(df_clean$date),sum)
ggplot(data=steps_clean, aes(steps_clean$x)) +
geom_histogram(breaks=seq(0,25000,by=1000),
col="slategrey",
fill="grey",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency")
steps <- aggregate(df$steps,by=list(df$date),sum)
ggplot(data=steps, aes(steps$x)) +
geom_histogram(breaks=seq(0,25000,by=1000),
col="slategrey",
fill="grey",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency")
steps <- aggregate(df$steps,by=list(df$date),sum)
ggplot(data=steps, aes(steps$x)) +
geom_histogram(breaks=seq(0,22000,by=2000),
col="slategrey",
fill="grey",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency")
steps_clean <- aggregate(df_clean$steps,by=list(df_clean$date),sum)
ggplot(data=steps_clean, aes(steps_clean$x)) +
geom_histogram(breaks=seq(0,22000,by=2000),
col="slategrey",
fill="grey",
alpha = .2) +
labs(title="Histogram for Steps Taken per Day") +
labs(x="Steps", y="Frequency")
str(df_clean)
View(df_clean)
df_clean$day <- weekdays(as.Date(df_clean$date))
View(df_clean)
df_clean$day <- weekdays(as.Date(df_clean$date))
df_weekday <- ifelse(df_clean$day %in% c("Saturday", "Sundag"), "Weekend", "Weekday")
df_clean$day <- weekdays(as.Date(df_clean$date))
df_clean$weekday <- ifelse(df_clean$day %in% c("Saturday", "Sundag"), "Weekend", "Weekday")
View(df_clean)
df_clean$day <- weekdays(as.Date(df_clean$date))
df_clean$weekday <- ifelse(df_clean$day %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
View(df_clean)
avg_clean <- aggregate(steps ~ interval + weekday, data=data_clean, mean)
View(steps_clean)
avg_clean <- aggregate(steps ~ interval + weekday, data=df_clean, mean)
ggplot(avg_clean, aes(interval, steps)) +
geom_line() +
facet_grid(day ~ .) +
xlab("5-minute interval") +
ylab("Number of steps")
avg_clean <- aggregate(steps ~ interval + weekday, data=df_clean, mean)
ggplot(avg_clean, aes(interval, steps)) +
geom_line() +
facet_grid(weekday ~ .) +
xlab("5-minute interval") +
ylab("Number of steps")
avg_clean <- aggregate(steps ~ interval + weekday, data=df_clean, mean)
ggplot(avg_clean, aes(interval, steps)) +
geom_line(c="slategrey") +
facet_grid(weekday ~ .) +
xlab("5-minute interval") +
ylab("Number of steps")
